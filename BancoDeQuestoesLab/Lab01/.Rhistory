distancia <- c(30,107,13,1.2,6,0.3,1,31,12.3,3,31,4,1.5,1.3,2,13,8,65.9,60,30,80,56,25.7,30,25.8,5.4)
hist(distancia)
boxplot(distancia)
boxplot(distancia)
boxplot(distancia)
boxplot(distancia)
distancia <- c(30,107,13,1.2,6,0.3,1,31,12.3,3,31,4,1.5,1.3,2,13,8,65.9,60,30,80,56,25.7,30,25.8,5.4,8.6,1.5,3.5,2,13,5,8,1,2,9.5,20,10,1,1.5,16,3,30,10,0.30,55,35,9,2,50,10,49.80,1,2.50,3,30,0.7,0.7,2,0.50,8,10.40,18)
boxplot(distancia)
hist(distancia)
hist(distancia,nbreaks=20)
hist(distancia,nbreak=20)
?hist
hist(distancia,breaks=20,col="blue")
hist(distancia,breaks=20,col="lightblue",ylab="Frequência","Distância","Distância de casa até a UNICAMP")
hist(distancia,breaks=20,col="lightblue",ylab="Frequência",xlab="Distância",main="Distância de casa até a UNICAMP")
distancia <- c(30,107,13,1.2,6,0.3,1,31,12.3,3,31,4,1.5,1.3,2,13,8,65.9,60,30,80,56,25.7,30,25.8,5.4,8.6,1.5,3.5,2,13,5,8,1,2,9.5,20,10,1,1.5,16)
choose(41,10)
choose(41,15)
choose(41,5)
Populacao <- data.frame(i=1:length(distancia),Y=distancia)
Populacao
Temos $N=`r dim(Populacao)[1]`$ alunos. Há $N^n$ maneiras de amostrarmos $n$ elementos dentre $N$ com reposição. Temos $\binom{N}{n}$ maneiras de amostrarmos $n$ elementos dentre $N$ sem reposição.
Considere que uma amostra tenha sido feita e que para cada aluno amostrado, tenhamos coletado a informação desejada. Como temos interesse na distância média, calculamos também a média das distâncias observadas na amostra, denotando por $\bar{Y^*}$.
?sample
Simulacao <- function(ID,Y,n,reposicao="nao"){
if (reposicao=="nao")
{
idAmostrado <- sample(x=ID,size=n,replace=FALSE)
}
else
{
idAmostrado <- sample(x=ID,size=n,replace=TRUE)
}
YAmostrado <- Y[idAmostrado]
MediaAmostral <- mean(YAmostrado)
return(idAmostrado,YAmostrado,MediaAmostral)
}
result <- Simulacao(ID=Populacao$id,Y=Populacao$Y,n=10,"sim")
result <- Simulacao(ID=Populacao$id,Y=Populacao$Y,n=10,reposicao="sim")
Populacao <- data.frame(id=1:length(distancia),Y=distancia)
result <- Simulacao(ID=Populacao$id,Y=Populacao$Y,n=10,reposicao="sim")
Simulacao <- function(ID,Y,n,reposicao="nao"){
if (reposicao=="nao")
{
idAmostrado <- sample(x=ID,size=n,replace=FALSE)
}
else
{
idAmostrado <- sample(x=ID,size=n,replace=TRUE)
}
YAmostrado <- Y[idAmostrado]
MediaAmostral <- mean(YAmostrado)
return(list(idAmostrado=idAmostrado,YAmostrado=YAmostrado,MediaAmostral=MediaAmostral)
}
Simulacao <- function(ID,Y,n,reposicao="nao"){
if (reposicao=="nao")
{
idAmostrado <- sample(x=ID,size=n,replace=FALSE)
}
else
{
idAmostrado <- sample(x=ID,size=n,replace=TRUE)
}
YAmostrado <- Y[idAmostrado]
MediaAmostral <- mean(YAmostrado)
return(list(idAmostrado=idAmostrado,YAmostrado=YAmostrado,MediaAmostral=MediaAmostral))
}
result <- Simulacao(ID=Populacao$id,Y=Populacao$Y,n=10,reposicao="sim")
result
result <- Simulacao(ID=Populacao$id,Y=Populacao$Y,n=10,reposicao="sim")
result
matrix
?matrix
DistribuicaoMediaAmostral <- function(ID,Y,n,reposicao,B)
{
MediaAmostral <- matrix(NA,ncol=1,nrow=B)
for (b in 1:B)
{
MediaAmostral[b] <- Simulacao(ID,Y,n,reposicao)[[3]] # seleciona o terceiro item da lista
}
hist(MediaAmostral)
}
DistribuicaoMediaAmostral(ID=Populacao$id,Y=Populacao$Y,n=10,reposicao="sim",1000)
DistribuicaoMediaAmostral(ID=Populacao$id,Y=Populacao$Y,n=10,reposicao="não",1000)
DistribuicaoMediaAmostral(ID=Populacao$id,Y=Populacao$Y,n=10,reposicao="não",1000)
renderPlot(DistribuicaoMediaAmostral(n=input$n,reposicao=input$reposicao,B=input$B))
library(shinny)
library(shiny)
DistribuicaoMediaAmostral(n=input$n,reposicao=input$reposicao,B=input$B)
DistribuicaoMediaAmostral(ID=Populacao$id,Y=Populacao$Y,n=10,reposicao="não",1000)
Simulacao(ID=Populacao$id,Y=Populacao$Y,n=10,reposicao="sim")
DistribuicaoMediaAmostral <- function(n,reposicao,B)
{
MediaAmostral <- matrix(NA,ncol=1,nrow=B)
for (b in 1:B)
{
MediaAmostral[b] <- Simulacao(ID=Populacao$id,Y=Populacao$Y,n,reposicao)[[3]] # seleciona o terceiro item da lista
}
return(hist(MediaAmostral))
}
DistribuicaoMediaAmostral(ID=Populacao$id,Y=Populacao$Y,n=10,reposicao="não",1000)
DistribuicaoMediaAmostral(n=10,reposicao="não",1000)
DistribuicaoMediaAmostral(n=10,reposicao="não",1000)
DistribuicaoMediaAmostral(n=10,reposicao="não",1000)
DistribuicaoMediaAmostral(n=10,reposicao="não",1000)
DistribuicaoMediaAmostral(n=10,reposicao="não",1000)
renderPlot(DistribuicaoMediaAmostral(n=10,reposicao="sim",B=1000))
renderPlot(DistribuicaoMediaAmostral(n=as.numeric(input$n),reposicao=input$reposicao,B=as.numeric(input$B)))
casos <- data.frame(n=rep(c(3,5,10,15,20,25,30,35,40),2),reposicao=c(rep("sim",9),rep("nao",9)))
casos
Resultados <- apply(casos,1,function(x) DistribuicaoMediaAmostral(ID=Populacao$id,Y=Populacao$Y,n=x[1],reposicao=x[2],B=2000))
DistribuicaoMediaAmostral <- function(ID,Y,n,reposicao,B)
{
MediaAmostral <- matrix(NA,ncol=1,nrow=B)
for (b in 1:B)
{
MediaAmostral[b] <- Simulacao(ID,Y,n,reposicao)[[3]] # seleciona o terceiro item da lista
}
return(MediaAmostral=MediaAmostral)
#return(hist(MediaAmostral,main="Distribuição da Média Amostral",ylab="Frequência", xlab="Média Amostral",col="lightpink"))
}
Simulacao <- function(ID,Y,n,reposicao="nao"){
if (reposicao=="nao")
{
idAmostrado <- sample(x=ID,size=n,replace=FALSE)
}
else
{
idAmostrado <- sample(x=ID,size=n,replace=TRUE)
}
YAmostrado <- Y[idAmostrado]
Media <- mean(YAmostrado)
return(list(idAmostrado=idAmostrado,YAmostrado=YAmostrado,Media=Media))
}
casos <- data.frame(n=rep(c(3,5,10,15,20,25,30,35,40),2),reposicao=c(rep("sim",9),rep("nao",9)))
Resultados <- apply(casos,1,function(x) DistribuicaoMediaAmostral(ID=Populacao$id,Y=Populacao$Y,n=x[1],reposicao=x[2],B=2000))
distancia <- c(30,107,13,1.2,6,0.3,1,31,12.3,3,31,4,1.5,1.3,2,13,8,65.9,60,30,80,56,25.7,30,25.8,5.4,8.6,1.5,3.5,2,13,5,8,1,2,9.5,20,10,1,1.5,16,
3,30,10,0.30,55,35,9,2,50,10,49.80,1,2.50,3,30,0.7,0.7,2,0.50,8,10.40,18)
Populacao <- data.frame(id=1:length(distancia),Y=distancia)
casos <- data.frame(n=rep(c(3,5,10,15,20,25,30,35,40),2),reposicao=c(rep("sim",9),rep("nao",9)))
Resultados <- apply(casos,1,function(x) DistribuicaoMediaAmostral(ID=Populacao$id,Y=Populacao$Y,n=x[1],reposicao=x[2],B=2000))
Resultados
str(Resultadis[[1]])
str(Resultados[[1]])
Resultados[1,]
?apply
?lapply
casos
x=casos[1,]
x
DistribuicaoMediaAmostral(ID=Populacao$id,Y=Populacao$Y,n=x[1],reposicao=x[2],B=2000)
str(casos)
casos <- data.frame(n=rep(c(3,5,10,15,20,25,30,35,40),2),reposicao=c(rep("sim",9),rep("nao",9)),stringAsFactors=FALSE)
Resultados <- apply(casos,1,function(x) DistribuicaoMediaAmostral(ID=Populacao$id,Y=Populacao$Y,n=x[1],reposicao=x[2],B=2000))
View(Resultados)
Resultados <- apply(casos,1,function(x) list(DistribuicaoMediaAmostral(ID=Populacao$id,Y=Populacao$Y,n=x[1],reposicao=x[2],B=2000)))
lapply(Resultados,mean)
Resultados
Resultados[[1]]
mean(Resultados[[1]])
str(Resultados[[1]])
lapply(Resultados,function(x) as.vector(mean(x))
)
str(Resultados[[1]])
mean(Resultados[[1]])
Resultados <- apply(casos,1,function(x) list(as.numeric(DistribuicaoMediaAmostral(ID=Populacao$id,Y=Populacao$Y,n=x[1],reposicao=x[2],B=2000))))
lapply(Resultados,mean)
str(Resultados[[1]])
mean(Resultados[[1]])
mean(as.numeric(Resultados[[1]]))
mean(unlist(Resultados[[1]]))
Resultados <- apply(casos,1,function(x) unlist(DistribuicaoMediaAmostral(ID=Populacao$id,Y=Populacao$Y,n=x[1],reposicao=x[2],B=2000)))
Resultados <- apply(casos,1,function(x) list(DistribuicaoMediaAmostral(ID=Populacao$id,Y=Populacao$Y,n=x[1],reposicao=x[2],B=2000)))
Media <- lapply(Resultados,function(x) mean(unlist(x)))
Media
casos <- data.frame(n=rep(c(3,5,10,15,20,25,30,35,40),2),reposicao=c(rep("sim",9),rep("nao",9)),stringAsFactors=FALSE)
Resultados <- apply(casos,1,function(x) list(DistribuicaoMediaAmostral(ID=Populacao$id,Y=Populacao$Y,n=x[1],reposicao=x[2],B=2000)))
MediaAmostral <- lapply(Resultados,function(x) mean(unlist(x)))
VarianciaAmostral <- lapply(Resultados,function(x) var(unlist(x)))
data.frame(casos,MediaAmostral,VarianciaAmostral)
casos
MediaAmostral
data.frame(casos,MediaAmostral,VarianciaAmostral)
MediaAmostral <- unlist(lapply(Resultados,function(x) mean(unlist(x))))
VarianciaAmostral <- unlist(lapply(Resultados,function(x) var(unlist(x))))
BB <- data.frame(casos,MediaAmostral=MediaAmostral,VarianciaAmostral=VarianciaAmostral)
View(BB)
sigma2 <- 486/2
BB <- data.frame(casos,MediaAmostral=round(MediaAmostral,2),VarianciaAmostral=round(VarianciaAmostral,2))
BB
BB$Comp <- var(distancia)/BB$n
BB
distancia <- c(30,107,13,1.2,6,0.3,1,31,12.3,3,31,4,1.5,1.3,2,13,8,65.9,60,30,80,56,25.7,30,25.8,5.4,8.6,1.5,3.5,2,13,5,8,1,2,9.5,20,10,1,1.5,16,
3,30,10,0.30,55,35,9,2,50,10,49.80,1,2.50,3,30,0.7,0.7,2,0.50,8,10.40,18)
S2 <- var(distancia)
sigma2 <- ((length(distancia)-1)/length(distancia))*S2
sigma2
S2
library(downloader)
download("https://docs.google.com/spreadsheets/d/1co3DmrFs2dRDbyJQwPjZ1LDXY4C4FBa777fy_5xQHNs/export?format=csv","QuestionarioEletivas.csv")
Questionario <- read.csv("QuestionarioEletivas.csv")
colnames(Questionario) <- c("Hora","RA","Email","Está em fase?","Previsao de Formatura","Seg e Qua 8-10","Ter e Qui 8-10","Seg e Qua 10-12","Ter e Qui 10-12","Seg e Qua 14-16","Ter e Qui 14-16", "Seg e Qua 16-18", "Ter e Qui 16-18")
Questionario[,5] <- factor(Questionario[,5],levels=c("Segundo Semestre 2015 (atual)","Primeiro Semestre 2016","Segundo Semestre 2016","Primeiro Semestre 2017 ou posterior"),ordered=TRUE)
View(Questionario)
Grafico0(Questionario[Questionario[,"Está em fase?"]=="Sim",], Previsao=unique(Questionario[Questionario[,"Está em fase?"]=="Sim","Previsao de Formatura"])[4],Titulo=paste0("Previsão de Formatura: ",unique(Questionario[Questionario[,"Está em fase?"]=="Sim","Previsao de Formatura"])[4]))
Grafico0 <- function(Questionario,Previsao,Titulo)
{
a <- reshape(Questionario[Questionario[,"Previsao de Formatura"] %in% Previsao,],varying=colnames(Questionario)[6:13],v.names="resposta",times= colnames(Questionario)[6:13],timevar="Horario", direction="long")
g1<-ggplot(a, aes(Horario, fill=resposta),environment=environment())+
geom_bar(position=position_dodge(),aes(y = ..count..)) +
ylab("Total")+
scale_x_discrete("Horário") +
scale_fill_discrete(name ="Disponível?")+ labs(title=Titulo)
return(g1 + theme(axis.text.x = element_text(angle = 90, hjust = 1)))
}
Grafico0(Questionario[Questionario[,"Está em fase?"]=="Sim",], Previsao=unique(Questionario[Questionario[,"Está em fase?"]=="Sim","Previsao de Formatura"])[4],Titulo=paste0("Previsão de Formatura: ",unique(Questionario[Questionario[,"Está em fase?"]=="Sim","Previsao de Formatura"])[4]))
Grafico0
Questionario <- Questionario[Questionario[,"Está em fase?"]=="Sim",]
Questionario <- read.csv("QuestionarioEletivas.csv")
colnames(Questionario) <- c("Hora","RA","Email","Está em fase?","Previsao de Formatura","Seg e Qua 8-10","Ter e Qui 8-10","Seg e Qua 10-12","Ter e Qui 10-12","Seg e Qua 14-16","Ter e Qui 14-16", "Seg e Qua 16-18", "Ter e Qui 16-18")
Questionario[,5] <- factor(Questionario[,5],levels=c("Segundo Semestre 2015 (atual)","Primeiro Semestre 2016","Segundo Semestre 2016","Primeiro Semestre 2017 ou posterior"),ordered=TRUE)
```
unique(Questionario[Questionario[,"Está em fase?"]=="Sim","Previsao de Formatura"])
Questionario[Questionario[,"Está em fase?"]=="Sim",]
unique(Questionario[Questionario[,"Está em fase?"]=="Sim","Previsao de Formatura"])
Quest0 <- Questionario[Questionario[,"Está em fase?"]=="Sim",]
unique(Quest0[,"Previsao de Formatura"])
Quest0[Quest0[,5]=="Primeiro Semestre 2016",]
Quest0[Quest0[,5]=="Segundo Semestre 2016",]
download.file("http://www.openintro.org/stat/data/ames.RData", destfile = "ames.RData")
load("ames.RData")
if (!file.exists("amos.Rda"))
{
download.file("http://www.openintro.org/stat/data/ames.RData", destfile = "ames.RData")
}
load("ames.RData")
if (!file.exists("amos.RData"))
{
download.file("http://www.openintro.org/stat/data/ames.RData", destfile = "ames.RData")
}
if (!file.exists("ames.RData"))
{
download.file("http://www.openintro.org/stat/data/ames.RData", destfile = "ames.RData")
}
load("ames.RData")
area <- ames$Gr.Liv.Area
price <- ames$SalePrice
hist(area,breaks=20,col="lightblue",ylab="Frequência",xlab="Área em pés quadrados",main= " ")
Populacao <- data.frame(id=1:length(area),Y=area)
Simulacao <- function(ID,Y,n,reposicao="nao"){
if (reposicao=="nao")
{
idAmostrado <- sample(x=ID,size=n,replace=FALSE)
}
else
{
idAmostrado <- sample(x=ID,size=n,replace=TRUE)
}
YAmostrado <- Y[idAmostrado]
Media <- mean(YAmostrado)
return(list(idAmostrado=idAmostrado,YAmostrado=YAmostrado,Media=Media))
}
Simulacao(ID=Populacao$id,Y=Populacao$Y,n=10,reposicao="sim")
Simulacao(ID=Populacao$id,Y=Populacao$Y,n=10,reposicao="sim")
DistribuicaoMediaAmostral <- function(ID,Y,n,reposicao,B)
{
MediaAmostral <- matrix(NA,ncol=1,nrow=B)
for (b in 1:B)
{
MediaAmostral[b] <- Simulacao(ID,Y,n,reposicao)[[3]] # seleciona o terceiro item da lista
}
return(MediaAmostral=MediaAmostral)
}
selectInput("n","Escolha o tamanho de cada amostra:", choices=c(3,5,10,15,20,25,30,35,40))
casos <- data.frame(n=rep(c(3,5,10,15,20,25,30,35,40),2),reposicao=c(rep("sim",9),rep("nao",9)))
Resultados <- apply(casos,1,function(x) list(DistribuicaoMediaAmostral(ID=Populacao$id,Y=Populacao$Y,n=x[1],reposicao=x[2],B=100)))
MediaAmostral <- unlist(lapply(Resultados,function(x) mean(unlist(x))))
VarianciaAmostral <- unlist(lapply(Resultados,function(x) var(unlist(x))))
BB <- data.frame(casos,MediaAmostral=round(MediaAmostral,2),VarianciaAmostral=round(VarianciaAmostral,2))
S2 <- var(area)
sigma2 <- ((length(area)-1)/length(area))*S2
BB$VarianciaAmostralTeorica <- ifelse(BB$reposicao=="sim",round(sigma2/BB$n,2),round((1-BB$n/length(area))*S2/BB$n,2))
colnames(BB) <- c("Tamanho da Amostra","Reposição?","Média Amostral: Média das 3000 Médias", "Variância Amostral: Variância das 3000 Médias","Variância Amostral Teórica")
library(printr)
BB
255452/40
sqrt(4171.77)
sqrt(3572.36)
B=10000
Resultados <- apply(casos,1,function(x) list(DistribuicaoMediaAmostral(ID=Populacao$id,Y=Populacao$Y,n=x[1],reposicao=x[2],B=B)))
Resultados
Resultados <- apply(casos,1,function(x) list(Simulacao(ID=Populacao$id,Y=Populacao$Y,n=x[1],reposicao=x[2],B=B)))
Resultados <- apply(casos,1,function(x) list(Simulacao(ID=Populacao$id,Y=Populacao$Y,n=x[1],reposicao=x[2])))
Resultados
casos <- data.frame(n=rep(c(3,5,10,15,20,25,30,35,40,50,60),2),reposicao=c(rep("sim",11),rep("nao",11)))
casos
Resultados <- apply(casos,1,function(x) list(Simulacao(ID=Populacao$id,Y=Populacao$Y,n=x[1],reposicao=x[2])))
Resultados
Resultados <- apply(casos,1,function(x) list(Simulacao(ID=Populacao$id,Y=Populacao$Y,n=x[1],reposicao=x[2])[[2]]))
Resultados
Simulacao
lapply(Resultados,mean)
?lapply
sapply(Resultados,mean)
warnings
warnings()
Resultados
Resultados <- apply(casos,1,function(x) unlist(Simulacao(ID=Populacao$id,Y=Populacao$Y,n=x[1],reposicao=x[2])[[2]])) #guardando apenas YAmostrado
Resultados
sapply(Resultados,mean)
qnorm(.075)
qnorm(.975)
alpha=0.05
qnorm(1-alpha/2)
casos <- data.frame(n=rep(c(3,5,10,15,20,25,30,35,40,50,60),2),reposicao=c(rep("sim",11),rep("nao",11)))
B=10000
Ybar <- mean(area)
alpha=0.05
Resultados <- apply(casos,1,function(x) unlist(Simulacao(ID=Populacao$id,Y=Populacao$Y,n=x[1],reposicao=x[2])[[2]])) #guardando apenas YAmostrado
Media <- sapply(Resultados,mean)
ErroPadrao <- sapply(Resultados,function(x) sqrt(var(x)/length(x)))
zalpha <- qnorm(1-alpha/2)
LI <- Media-zalpha*ErroPadrao
LI
Prop <- matrix(NA,ncol=B,nrow=dim(casos)[1])
Resultados <- apply(casos,1,function(x) unlist(Simulacao(ID=Populacao$id,Y=Populacao$Y,n=x[1],reposicao=x[2])[[2]])) #guardando apenas YAmostrado
Media <- sapply(Resultados,mean)
MEdia
Media
ErroPadrao <- sapply(Resultados,function(x) sqrt(var(x)/length(x)))
zalpha <- qnorm(1-alpha/2)
LI <- Media-zalpha*ErroPadrao
LS <- Media +zalpha*ErroPadrao
ifelse(Ybar>LI & Ybar<LS,1,0)
casos <- data.frame(n=rep(c(3,5,10,15,20,25,30,35,40,50,60),2),reposicao=c(rep("sim",11),rep("nao",11)))
B=10000
Ybar <- mean(area)
alpha=0.05
Prop <- matrix(NA,ncol=B,nrow=dim(casos)[1])
zalpha <- qnorm(1-alpha/2)
for (b in 1:B)
{
Resultados <- apply(casos,1,function(x) unlist(Simulacao(ID=Populacao$id,Y=Populacao$Y,n=x[1],reposicao=x[2])[[2]])) #guardando apenas YAmostrado
Media <- sapply(Resultados,mean)
ErroPadrao <- sapply(Resultados,function(x) sqrt(var(x)/length(x)))
LI <- Media-zalpha*ErroPadrao
LS <- Media +zalpha*ErroPadrao
casos <- data.frame(n=rep(c(3,5,10,15,20,25,30,35,40,50,60),2),reposicao=c(rep("sim",11),rep("nao",11)))
B=10000
Ybar <- mean(area)
alpha=0.05
Inclui <- matrix(NA,ncol=B,nrow=dim(casos)[1])
zalpha <- qnorm(1-alpha/2)
for (b in 1:B)
{
Resultados <- apply(casos,1,function(x) unlist(Simulacao(ID=Populacao$id,Y=Populacao$Y,n=x[1],reposicao=x[2])[[2]])) #guardando apenas YAmostrado
Media <- sapply(Resultados,mean)
ErroPadrao <- sapply(Resultados,function(x) sqrt(var(x)/length(x)))
LI <- Media-zalpha*ErroPadrao
LS <- Media +zalpha*ErroPadrao
Inclui[,b] <- ifelse(Ybar>LI & Ybar<LS,1,0)
}
}
casos <- data.frame(n=rep(c(3,5,10,15,20,25,30,35,40,50,60),2),reposicao=c(rep("sim",11),rep("nao",11)))
B=10000
Ybar <- mean(area)
alpha=0.05
Inclui <- matrix(NA,ncol=B,nrow=dim(casos)[1])
zalpha <- qnorm(1-alpha/2)
for (b in 1:B)
{
Resultados <- apply(casos,1,function(x) unlist(Simulacao(ID=Populacao$id,Y=Populacao$Y,n=x[1],reposicao=x[2])[[2]])) #guardando apenas YAmostrado
Media <- sapply(Resultados,mean)
ErroPadrao <- sapply(Resultados,function(x) sqrt(var(x)/length(x)))
LI <- Media-zalpha*ErroPadrao
LS <- Media +zalpha*ErroPadrao
Inclui[,b] <- ifelse(Ybar>LI & Ybar<LS,1,0)
}
View(Inclui)
Prop <- apply(Inclui,1,mean)
Prop
BB <- data.frame(casos,Prop)
colnames(BB) <- c("Tamanho da Amostra","Reposição?","Proporção")
BB
?sample
